// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-im/app/jobs/internal/biz"
	"kratos-im/app/jobs/internal/conf"
	"kratos-im/app/jobs/internal/data"
	"kratos-im/app/jobs/internal/server"
	"kratos-im/app/jobs/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	consumerRepo := data.NewConsumerRepo(dataData, logger)
	consumerUsecase := biz.NewConsumerUsecase(consumerRepo, logger)
	consumerService := service.NewConsumerService(consumerUsecase)
	kafkaServer := server.NewKafkaServer(confData, logger, consumerService)
	app := newApp(logger, kafkaServer)
	return app, func() {
		cleanup()
	}, nil
}
