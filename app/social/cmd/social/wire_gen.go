// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-im/app/social/internal/biz"
	"kratos-im/app/social/internal/conf"
	"kratos-im/app/social/internal/data"
	"kratos-im/app/social/internal/server"
	"kratos-im/app/social/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	db := data.NewDB(confData, logger)
	dataData, cleanup, err := data.NewData(confData, logger, db)
	if err != nil {
		return nil, nil, err
	}
	socialRepo := data.NewSocialRepo(dataData, logger)
	transaction := data.NewTransaction(dataData)
	socialUsecase := biz.NewSocialUsecase(socialRepo, logger, transaction)
	socialService := service.NewSocialService(socialUsecase)
	grpcServer := server.NewGRPCServer(confServer, socialService, logger)
	app := newApp(logger, grpcServer)
	return app, func() {
		cleanup()
	}, nil
}
